@model Confluence.Blueprint.Models.DocumentChangeRequest  
@using Confluence.Blueprint.Models          
@{
    ViewBag.Title = "Document Change Request";
}


@section MenuGroup{
        
}
@section PageScripts{
    <script src="@Url.Content("~/js/assets/jquery.validate.min.js")" type="text/javascript"></script>
    <script type="text/javascript" src="@Url.Content("~/js/modern/dialog.js")"></script>
    <script type="text/javascript" src="@Url.Content("~/js/assets/moment.min.js")" ></script>
    <script type="text/javascript" src="@Url.Content("~/js/assets/jquery.tmpl.min.js")" ></script>
}   
@section PageHeader{
Document Change Request
}
@section PageStyles{
<style>
    .ui-datepicker table tbody tr td { padding:1px; }
    #dcr td { vertical-align:top;   }
    body { counter-reset: Serial;           /* Set the Serial counter to 0 */ }
    #dataTable { border-collapse: separate; }

    #dataTable tr td:first-child:before
    {
      counter-increment: Serial;      /* Increment the Serial counter */
      content: counter(Serial); /* Display the counter */
    }
</style>
}
 @using (Html.BeginForm("SaveChangeRequest", "DocumentLibrary", FormMethod.Post, new { id = "myForm", name = "myForm" }))
 {

    <div id="dcr">
        <fieldset>
            <legend>Change Request Information</legend>
                <table>
        <tbody >
                <tr>
                    <td >
                            <label>DCR No:</label>
                            @Html.HiddenFor(m => m.DocumentChangeRequestID)
                            @Html.HiddenFor(m => m.DocumentID)
			                @Html.HiddenFor(m => m.DepartmentID, new { id = "hidDept" } )
                            @Html.HiddenFor(m => m.EffectedDocumentIDs, new { id = "hideffdocs" } )
                       
                    </td>
                    <td>
                        @if(! ViewBag.HideGenerateButton)
                         {
                            <input type="button" value="Generate" id="btnGenerate" />
                         }
                        <div class="input-control text" >
                         @Html.TextBoxFor(m => m.RequestNumber, new { placeholder = "Generate RequestNumber", id = "RequestNumber", @class = "required uppercase" })
                         
                        </div>
                    </td>
                    <td style="width:200px" >
                        
                            <label>Created Date:</label>
                        
                    </td>
                    <td >
                        <div class="input-control text" >
                            @if(! string.IsNullOrWhiteSpace(Model.CreatedOn))
                            {
                                <script>document.write(moment('@Model.CreatedOn').format('Do MMMM YYYY'))</script>@Html.Raw(", ")
                                <script>document.write(moment('@Model.CreatedOn').fromNow())</script>
                            }
                        </div>
                    </td>
                
                </tr>
            <tr>
                    <td>
                        <label>Doc No:</label>
                        
                    </td>
                    <td>
                        
                            @*
                            @Html.DropDownListFor(m => m.DocumentID, new SelectList(ViewBag.Documents as System.Collections.IEnumerable, "DocumentID", "DocumentNumber"),
                                "Select a Document", new { id = "ddlDocuments", @class = "required", data_url = Url.Action("ChangeRequest") })
                            *@
                            <label>@Model.SelectedDocument.DocumentNumber</label>
                        
                    </td>
                    <td >
                        <label>Current Revision Status:</label>
                    </td>
                    <td>
                        <label>@Model.SelectedDocument.WorkflowStatusName</label>

                    </td>
                
                </tr>
            <tr>
                <td>
                    <label>Doc Title:</label>
                    
                </td>
                <td colspan="3">
                    <div class="editor-label">
                        <label>@Model.SelectedDocument.DocumentName</label>
                    </div>
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    
                        <label>Details of the Change Required:</label>
                    
                </td>
                <td colspan="2">
                    
                        <label>Reasons of Change:</label>
                    
                </td>
                    
            </tr>
            <tr>
                <td colspan="2">
                    <div class="input-control text">
                        @Html.TextAreaFor(m => m.Detail, new { id = "Detail" })
                    </div>
                    
                </td>
                <td colspan="2">
                    <div class="input-control text" >
                        @Html.TextAreaFor(m => m.Reason, new { id = "Reason" })
                    </div>
                </td>
                    
            </tr>
            <tr>
                <td colspan="4">
                    <div class="input-control text">
                        Initiated by: <label>@Model.CreatedBy </label>
                    </div>
                </td>
                    
            </tr>
            <tr><td colspan="4"><pre class="prettyprint linenumss"> Effected documents due to this change:</pre></td></tr>
            <tr><td colspan="4">
                    <table class="hovered" id="dataTable">
                        <thead><tr><th>S.No</th><th>Document Number</th><th>Document Name</th><th>Current Rev No.</th><th>Changed Rev No.</th><th></th></tr></thead>
                        <tbody>
                            @foreach (EffectedDocuments eff in Model.EffectedDocuments)
                            {
                                <tr>
                                <td></td>
                                <td>
                                    <div class="input-control select">
                                        <select class="docs">
                                            @foreach (EffectedDocuments doc in Model.DepartmentDocumentsList)
                                            {
                                                if (eff.DocumentID == doc.DocumentID)
                                                { 
                                                    <option value="@doc.DocumentID" selected >@doc.DocumentNumber</option>
                                                }else{
                                                        <option value="@doc.DocumentID">@doc.DocumentNumber</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                </td>
                                <td>@eff.DocumentName</td>
                                <td>@eff.VersionString</td>
                                <td>@eff.NextVersion</td>
                                <td><input type="checkbox"/></td>
                            </tr>
                            }
                        </tbody>
                        <tfoot></tfoot>
                    </table>
                
                </td>
            </tr>
            <tr><td colspan="4">
                <input type="button" value="Add to Effected List" id="btnAdd" />
                <input type="button" value="Remove from Effected List" id="btnRemove" />
                </td>

            </tr>
            <tr><td colspan="4">&nbsp;</td></tr>
            <tr>
                <td >
                    <div class="editor-label">
                        <label>Change effective date:</label>
                    </div>
                </td>
                <td >
                    <div class="input-control">
                        @Html.TextBoxFor(m => m.EffectiveDate, new { id = "EffectiveDate", @class = "date required" })
                    </div>
                </td>
                <td colspan="2"></td>
                
            </tr>
            <tr>
                <td >
                    <label>Approver's Comment:</label>
                    
                </td>
                <td>
                    <div class="input-control text" >
                    @Html.TextAreaFor(m => m.Comment1, new { id = "Comment1", @class = "required" })
                    </div>
                </td>
                <td >
                    
                        <label>MR's Comment:</label>
                    
                </td>
                <td>
                    <div class="input-control text" >
                    @Html.TextAreaFor(m => m.Comment3, new { id = "Comment3" })
                    </div>
                </td>
                
            </tr>
            @*<tr>
                <td >
                    <div class="editor-label">
                        <label>Comments:</label>
                    </div>
                </td>
                <td>
                    <div class="input-control text">
                    @Html.TextBoxFor(m => m.Comment2, new { id = "Comment2" })
                    </div>
                </td>
                <td >
                    <label>Approver 2:</label>
                </td>
                <td >
                    <label>@Model.Comment2By</label>
                </td>
                
            </tr>*@
            
            <tr>
                <td>
                    <label>Comment By:</label>
                </td>
                <td >
                    <label>@Model.Comment1By</label>
                </td>
                
                <td colspan="2">
                    <label>(Management Representative) : @Model.Comment3By</label>
                </td>
                
            </tr>
            <tr><td colspan="4">&nbsp;</td></tr>
            <tr>
                <td colspan="4">
                    <input type="submit" value="Save" id="save" class="command-button default" />
                    <input type="button" value="Cancel" id="cancel"/>
                    
                </td>
            </tr>

        </tbody>
    </table>
        </fieldset>
    </div>

        
 }
<script id="docTemplate" type="text/x-jquery-tmpl">
    <tr>
        <td></td>
        <td>
            <div class="input-control select">
                <select class="docs">
                    <option value="0"></option>
                    {{each Documents}}
                        <option value="${DocumentID}">${DocumentNumber}</option>
                    {{/each}}
                </select>
            </div>
        </td>
        <td></td>
        <td></td>
        <td></td>
        <td><input type="checkbox"/></td>
    </tr>

</script>
 @section PageFooterScripts{
  <script type="text/javascript">
      var data = @Html.Raw("{Documents:"+ ViewData["DocList"] +"}") ;
      //var data = {Documents:[{"DocumentID":29,"DocumentName":"Process map for Business Planning","DocumentNumber":"ABC\/BP\/REC\/PM\/","NextVersion":"2.00","VersionString":"1.00"},{"DocumentID":48,"DocumentName":"SOP for Business Planning","DocumentNumber":null,"NextVersion":"3.00","VersionString":"2.00"},{"DocumentID":54,"DocumentName":"tststtststst","DocumentNumber":null,"NextVersion":"4.00","VersionString":"3.00"},{"DocumentID":56,"DocumentName":"sop 1234","DocumentNumber":null,"NextVersion":"4.00","VersionString":"3.00"},{"DocumentID":58,"DocumentName":"SOP for Business Planning123","DocumentNumber":null,"NextVersion":"2.10","VersionString":"1.10"},{"DocumentID":64,"DocumentName":"testnow","DocumentNumber":"AHIDCO\/BP\/aaaa\/1","NextVersion":"2.00","VersionString":"1.00"},{"DocumentID":67,"DocumentName":"process map for business planning123","DocumentNumber":null,"NextVersion":"3.00","VersionString":"2.00"}]};
      var docselect = function(e)
      {
          var matches = data.Documents.filter(function (val, index, array) {
              return val.DocumentID == $(e.currentTarget).val();
          });
          if (matches && matches.length > 0) {
              $(e.currentTarget).closest('td').next().text(matches[0].DocumentName);//.find('input')
              $(e.currentTarget).closest('td').next().next().text(matches[0].VersionString);
          }
      }
      var timeoutid;
      function EnablePublish() {
        var rg = $.cookie('RoleGroup');
        if(rg != 'Administrators')
        {
            $('#Comment3').prop("disabled","disabled");
            window.clearTimeout(timeoutid);
        }
        else
        {
            $('#save').val("Publish");
        }
      }
      
      $(document).ready(function () {
          timeoutid = window.setTimeout("EnablePublish()", 1000);
          $(".date").datepicker({ minDate: new Date, dateFormat: 'dd-mm-yy' });

          $('#btnAdd').on('click', function () {
              $("#docTemplate").tmpl(data).appendTo("#dataTable tbody");
              $("body").off("change", ".docs", docselect);
              $("body").on("change", ".docs", docselect);
          });

          $('#btnRemove').on('click', function () {
              //var checked = $('#dataTable tbody').find('input:checkbox:checked').map(function () {
              //    return this.value;
              //}).get();
              $('#dataTable tbody').find('input:checkbox:checked').closest("tr").remove();
          });

          
          $('#myForm').on('submit', function () {
              var temp="";
              $("#dataTable tbody select").each(function() {
                  temp = temp + $(this).val() + ","; //do something with the select $(this) will give you the select element
              });
              
              $("#hideffdocs").val(temp);
              return $('#myForm').valid();
          });
          
          $('#cancel').click(function (e) {
              $.redirect('@Url.Content("~/DocumentLibrary")', "Warning", "Change request operation cancelled");
              
          });
          
	  $('#btnGenerate').click(function (e) {
	      $.ajax({
                type: "GET",
                url: "/DocumentLibrary/GenerateChangeRequestNumber/" + $('#hidDept').val(),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    var json;
			        if (data.hasOwnProperty("d")) json = data.d; else json = data;
			        if(json)$('#RequestNumber').val(json);
		        },
		        error: function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("responseText=" + XMLHttpRequest.responseText + "\n textStatus=" + textStatus + "\n errorThrown=" + errorThrown, "Error", "Error");
                }
            });
	
          });
	  
      });
      
    </script>
}    
