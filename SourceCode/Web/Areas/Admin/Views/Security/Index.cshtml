@model Confluence.Blueprint.Models.RoleGroupConfigurationModel
@{
    ViewBag.Title = "Security Configuration";
}

@section MenuGroup{

}
@section PageScripts{
<script src="@Url.Content("~/js/assets/jquery.validate.min.js")" type="text/javascript"></script>
<script type="text/javascript" src="@Url.Content("~/js/modern/dialog.js")"></script>
}
@section PageHeader{Security Configuration}

        <p>
                Use the form below to configure security mapping. 
        </p>
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myForm", name = "myForm" }))
        {
                            
                    <div>
                        <fieldset>
                            <legend>Security Configuration</legend>
                            @Html.ValidationSummary()
                        
                        @if (Model.RoleGroups != null && Model.RoleGroups.Count > 0)
                        { 
                            @Html.HiddenFor( m => m.RoleGroups.Count)
                            <table>

                        <tbody>
                                
                                <tr>
                                    <td>&nbsp;</td>
                                    @foreach (Confluence.Blueprint.Models.Role r in Model.RoleGroups[0].Roles)
                                    {
                                        <td >
                                            <div class="editor-label" style="text-align:center">
                                                @r.RoleName
                                            </div>
                                        </td>
                                    }
                                </tr>
                                
                                @for (int j = 0; j < Model.RoleGroups.Count; j++)
                                {
                                    <tr>
                                    <td>@Model.RoleGroups[j].RoleGroupName</td>
                                     @Html.HiddenFor(m => m.RoleGroups[j].RoleGroupID)
                                     @Html.HiddenFor(m => m.RoleGroups[j].RoleGroupName)
                                    @for (int i = 0; i < Model.RoleGroups[j].Roles.Count; i++)
                                    {     
                                        @Html.HiddenFor(m=> m.RoleGroups[j].Roles[i].RoleID)
                                        @Html.HiddenFor(m => m.RoleGroups[j].Roles[i].RoleName)
                                        @Html.HiddenFor(m => m.RoleGroups[j].Roles[i].RoleGroupConfigurationID)
                                        <td >
                                         <div style="text-align:center">
                                           <label class="input-control checkbox">
                                             @Html.CheckBoxFor(m => m.RoleGroups[j].Roles[i].IsGranted)
                                            <span class="helper"></span>
                                        </label>
                                        </div>
                                       </td>
    
                                    } 
                                    
                                    </tr>
                                }
                               
                                
                            </tbody>
                        </table>
                    
                        }
                    
                        </fieldset>
                        <br />
                        <p>
                            <input type="submit" value="Save" />
                        </p>
                    </div>

        }
@section PageFooterScripts{
<script type="text/javascript">
    $(document).ready(function () {
        $("#save").live("click", function () {
                $('#myForm').submit();
        });

        $('#cancel').click(function (e) {
            $.redirect('@Url.Content("~/Admin")', "Warning", "Security configuration cancelled");
        });
    });
</script>
}
