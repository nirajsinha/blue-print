@model Confluence.Blueprint.Models.DocumentMasterModel
@{
    ViewBag.Title = "Master Data";
}

@section MenuGroup{

}
@section PageScripts{
<script src="@Url.Content("~/js/assets/jquery.validate.min.js")" type="text/javascript"></script>
<script type="text/javascript" src="@Url.Content("~/js/modern/dialog.js")"></script>
}
@section PageHeader{Master Data}

        <p>
                Use the form below to configure Master Data. 
        </p>
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myForm", name = "myForm" }))
        {
                            
                    <div>
                        <fieldset>
                            <legend>Master Data Configuration</legend>
                            @Html.ValidationSummary()
                        <table>
                            <tbody>
                                <tr>
                                    <td style="width:250px">
                                        <div class="editor-label">
                                            @Html.HiddenFor(m => m.OrganizationID, new { id = "hidOrgId" })
                                           @Html.HiddenFor(m => m.DocumentMasterID, new { id = "hidDocId" })
                                            @Html.LabelFor(m => m.IssueApplicable)
                                        </div>
                                    </td>
                                    <td>
                                        <label class="input-control radio">
                                                @Html.RadioButtonFor(m => m.IssueApplicable, true, new { id = "issue-applicable-yes", name = "IssueApplicable" })
                                                <span class="helper">Applicable</span>
                                            </label>
                                            <label class="input-control radio">
                                                @Html.RadioButtonFor(m => m.IssueApplicable, false, new { id = "issue-applicable-no", name = "IssueApplicable" })
                                                <span class="helper">Not-applicable</span>
                                            </label>
                                    </td>
                                 </tr>
                                <tr>
                                     <td> &nbsp;</td>
                                    <td >
                                        <label class="input-control radio">
                                                @Html.RadioButtonFor(m => m.VersionOrRevision, 1, new { id = "version", name = "VersionOrRevision" })
                                                <span class="helper">Version</span>
                                            </label>
                                            <label class="input-control radio">
                                                @Html.RadioButtonFor(m => m.VersionOrRevision, 2, new { id = "revision", name = "VersionOrRevision" })
                                                <span class="helper">Revision</span>
                                            </label>
                                    </td>
                                 </tr>
                                <tr>
                                    <td >
                                        <div class="editor-label">
                                             @Html.LabelFor(m => m.InitialNumber)
                                        </div>
                                    </td>
                                    <td >
                                         <div class="input-control text" style="width:380px;">
                                        @Html.TextBoxFor(m => m.InitialNumber, new { placeholder = "Enter initial number", id = "InitialNumber", name = "InitialNumber", @class = "validDigits" })
                                    </div>
                                    </td>
                                </tr>

                                <tr>
                                    <td >
                                        <div class="editor-label">
                                             @Html.LabelFor(m => m.IncrementBy)
                                        </div>
                                    </td>
                                    <td >
                                         <div class="input-control text" style="width:380px;">
                                            @Html.TextBoxFor(m => m.IncrementBy, new { placeholder = "Enter increment", id = "IncrementBy", name = "IncrementBy", @class = "validDigits" })
                                        </div>
                                   
                                    </td>
                                </tr>

                                <tr>
                                    
                                    <td colspan="2">
                                        <fieldset>
                                            <legend>Document Numbering</legend>
                                        <table>
                                            <tr>
                                                <td>
                                                    <div class="input-control text" >
                                                        @Html.TextBoxFor(m => m.DocumentName1, new { id = "DocumentName1", name = "DocumentName1", @class="requiredDocNumbering"})
                                                    </div>
                                                </td>
                                                <td>/</td>
                                                <td>
                                                    <div class="input-control text" >
                                                        @Html.TextBoxFor(m => m.DocumentName2, new { id = "DocumentName2", name = "DocumentName2", @class = "requiredDocNumbering" })
                                                    </div>
                                                </td>
                                                <td>/</td>
                                                <td>
                                                    <div class="input-control text" >
                                                        @Html.TextBoxFor(m => m.DocumentName3, new { id = "DocumentName3", name = "DocumentName3", @class = "requiredDocNumbering" })
                                                    </div>
                                                </td>
                                                <td>/</td>
                                                <td>
                                                    <div class="input-control text" >
                                                        @Html.TextBoxFor(m => m.DocumentName4, new { id = "DocumentName4", name = "DocumentName4", @class = "requiredDocNumbering" })
                                                    </div>
                                                </td>
                                                <td>/</td>
                                                <td>
                                                    <div class="input-control text" >
                                                        @Html.TextBoxFor(m => m.SerialNumber, new { id = "SerialNumber", name = "SerialNumber" })
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr>
                                                <td colspan="2">
                                                        @Html.EditorFor(model => model.DocumentType1)
                                                </td>
                                                <td colspan="2">
                                                        @Html.EditorFor(model => model.DocumentType2)
                                                </td>
                                                
                                                <td colspan="2">
                                                        @Html.EditorFor(model => model.DocumentType3)
                                                </td>
                                                
                                                <td colspan="2">
                                                        @Html.EditorFor(model => model.DocumentType4)
                                                </td>

                                                <td style="vertical-align:top">
                                                    @Html.LabelFor(m => m.SerialNumber)
                                                </td>
                                            </tr>
                                        </table>
                                        </fieldset>
                                    </td>
                                </tr>
                                
                                <tr>
                                    <td colspan="2">
                                        <input type="button" class="command-button default" value="Save" id="save"/>
                                        <input type="button" value="Cancel" id="cancel" />
                                   
                                    </td>
                                </tr>
                             </tbody>
                        </table>
                    
                    
                    
                        </fieldset>
                    </div>

        }
@section PageFooterScripts{
<script type="text/javascript">
    $(document).ready(function () {
        $("#save").live("click", function () {
            $("#myForm").validate({
                rules: {
                    'requiredDocNumbering': {
                        requiredDocNumbering: true
                    },
                    'validDigits': {
                        validDigits: true
                    }
                }
            });
            if ($('#myForm').valid()) {
                $('#myForm').submit();
            }
        });

        $("#DocumentName1").bind("change paste keyup", function () {
            if ($('#DocumentName1').val() == '') $("input[name='DocumentType1']").removeAttr('disabled', 'disabled');
            else $("input[name='DocumentType1']").attr('disabled', 'disabled').prop('disabled', 'disabled');
        });
        $("#DocumentName2").bind("change paste keyup", function () {
            if ($('#DocumentName2').val() == '') $("input[name='DocumentType2']").removeAttr('disabled', 'disabled');
            else $("input[name='DocumentType2']").attr('disabled', 'disabled').prop('disabled', 'disabled');
        });
        $("#DocumentName3").bind("change paste keyup", function () {
            if ($('#DocumentName3').val() == '') $("input[name='DocumentType3']").removeAttr('disabled', 'disabled');
            else $("input[name='DocumentType3']").attr('disabled', 'disabled').prop('disabled', 'disabled');
        });
        $("#DocumentName4").bind("change paste keyup", function () {
            if ($('#DocumentName4').val() == '') $("input[name='DocumentType4']").removeAttr('disabled', 'disabled');
            else $("input[name='DocumentType4']").attr('disabled', 'disabled').prop('disabled', 'disabled');
        });

        
        $("input[name='DocumentType1']").change(function () {
            if ($('#DocumentType1.r_none').is(':checked')) $('#DocumentName1').removeAttr('disabled', 'disabled');
            else $('#DocumentName1').val('').attr('disabled', 'disabled').prop('disabled', 'disabled');
        });
        $("input[name='DocumentType2']").change(function () {
            if ($('#DocumentType2.r_none').is(':checked')) $('#DocumentName2').removeAttr('disabled', 'disabled');
            else $('#DocumentName2').val('').attr('disabled', 'disabled').prop('disabled', 'disabled');
        });
        $("input[name='DocumentType3']").change(function () {
            if ($('#DocumentType3.r_none').is(':checked')) $('#DocumentName3').removeAttr('disabled', 'disabled');
            else $('#DocumentName3').val('').attr('disabled', 'disabled').prop('disabled', 'disabled');
        });
        $("input[name='DocumentType4']").change(function () {
            if ($('#DocumentType4.r_none').is(':checked')) $('#DocumentName4').removeAttr('disabled', 'disabled');
            else $('#DocumentName4').val('').attr('disabled', 'disabled').prop('disabled', 'disabled');
        });

        $("#DocumentName1").trigger('change');
        $("#DocumentName2").trigger('change');
        $("#DocumentName3").trigger('change');
        $("#DocumentName4").trigger('change');
        $("input[name='DocumentType1']").trigger('change');
        $("input[name='DocumentType2']").trigger('change');
        $("input[name='DocumentType3']").trigger('change');
        $("input[name='DocumentType4']").trigger('change');

        jQuery.validator.addMethod("requiredDocNumbering", function (value, element) {
            var result = true;
            if (!$(element).is(':disabled')) {
                //if ($(element).val() == '') result = false;
            }
            return result;

        }, "This field is required");
        jQuery.validator.addMethod("validDigits", function (value, element) {
            var result = false;
            if ($(element).val() != '' && parseFloat($(element).val()) > 0)
                result = true;
            return result;

        }, "This field is required must not be 0");


        $('#cancel').click(function (e) {
            $.redirect('@Url.Content("~/Admin")', "Warning", "Configuration of Master Data cancelled");
        });
    });
</script>
}

